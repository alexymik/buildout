[config]
## User configuration options for GroupServer installation are in this
##    section.
##
# The host name and the port for the new GroupServer site.
host = gstest
port = 8080
# The GroupServer users that are created when the example site is
# set up. The example site has an administrator and normal user by
# default. Note the two email addresses must be different!
admin_email    = admin@example.example
admin_password = gsadminpass
user_email     = user@example.example
user_password  = gsuserpass
# The support email address for the new sites.
support_email  = support@example.example
# The default timezone
timezone = UTC
# The SMTP connection settings, used for notification delivery. By
#   default, the localhost is used with no authentication.
smtp_host = localhost
smtp_port = 25
smtp_user =
smtp_password =
# The hostname and port that Zope should listen to, in order to serve
#   GroupServer pages. Beware of IPv6 lookups causing issues with your
#   configuration!
zope_host = 127.0.0.1
zope_port = 8080
# The user-name and password for the default Zope Management Interface
#   (ZMI) user. The password can be changed after GroupServer has been
#   installed.
zope_admin = admin
zope_pass = admin
# The host and port that PostgreSQL listens to.
pgsql_host = localhost
pgsql_port = 5432
# The name of the PostgreSQL database that GroupServer will create to
#   store all of its data.
pgsql_dbname = gstestdb
# The name of the PostgreSQL user that should be used to connect to
#   the GroupServer database to administer it. The user will be created
#   during the install. Note it must be different to pgsql_dbname.
pgsql_user = gstest
# The name of the admin of PostgreSQL, used to create the PostgreSQL
#   user.
pgsql_admin = postgres
pgsql_password = 
##
## End of user configuration options

[setup-gs]
recipe = gs.recipe.setupgs
# --=mpj17=-- For those that are interested, the way buildout works is
#   as follows. The recipe (gs.recipe.setupgs) is called with all the
#   options specified in this section as arguments. A recipe can only
#   see the options in its own section, so the ${config:} construct is
#   used to share options between the sections.
gs_host = ${config:host}
gs_port = ${config:port}
gs_smtp_host = ${config:smtp_host}
gs_smtp_port = ${config:smtp_port}
gs_smtp_user = ${config:smtp_user}
gs_smtp_password = ${config:smtp_password}
gs_admin_email    = ${config:admin_email}
gs_admin_password = ${config:admin_password}
gs_user_email     = ${config:user_email}
gs_user_password  = ${config:user_password}
gs_support_email  = ${config:support_email}
gs_timezone = ${config:timezone}
instance_id = groupserver
instance_title = Initial GroupServer Instance
zope_admin_name = ${config:zope_admin}
zope_admin = ${config:zope_admin}:${config:zope_pass}
database_host = ${config:pgsql_host}
database_port = ${config:pgsql_port}
database_admin = ${config:pgsql_admin}
database_username = ${config:pgsql_user}
database_password = ${config:pgsql_password}
database_name = ${config:pgsql_dbname}

[instance]
recipe = plone.recipe.zope2instance
eggs = ${buildout:eggs}        
zcml = ${buildout:zope-eggs}
products = ${buildout:directory}/src
user = ${config:zope_admin}:${config:zope_pass}
http-address = ${config:zope_host}:${config:zope_port}
debug-mode = on
enable-product-installation = off
extra-paths = ${buildout:directory}/parts/site-packages/

[init-pgsql]
recipe = iw.recipe.cmd
on_install = true
cmds =
  createuser -d -r -l -S -U ${config:pgsql_admin} -h ${config:pgsql_host} -p ${config:pgsql_port} ${config:pgsql_user}
  createdb -T template0 -E UTF8 -U ${config:pgsql_user} -h ${config:pgsql_host} -p ${config:pgsql_port} ${config:pgsql_dbname}
  createlang -U ${config:pgsql_user} -h ${config:pgsql_host} -p ${config:pgsql_port} plpgsql ${config:pgsql_dbname}

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo
