.. sectnum::

========================
GroupServer Installation
========================

:Authors: Michael JasonSmith; Richard Waid; Alice Murphy; Dan Randow
:Contact: Michael JasonSmith <mpj17@onlinegroups.net>
:Date: 2010-09-01 (see `History`_)
:Organization: `GroupServer.org`_
:Copyright: This document is licensed under a
  `Creative Commons Attribution-Share Alike 3.0 New Zealand License`_
  by `OnlineGroups.Net`_.

Quick Start
===========

#. Download the latest version of GroupServer from 
   <http://groupserver.org/downloads> and extract the archive.
#. Install the required packages (see `Requirements`_).
#. Ensure that the user that will run GroupServer can create databases
   in PostgreSQL (see `Configure PostgreSQL`_).
#. Create a new hostname for your GroupServer site. Yes, you will need 
   a new one (see `Pick a Host Name`_).
#. Edit ``instance.cfg`` (see `Configure Zope`_).
#. Run the following (see `Run Buildout`_)::

   $ virtualenv --no-site-packages -ppython2.6 .
   $ ./bin/easy_install -U setuptools && ./bin/python bootstrap.py
   $ ./bin/buildout -v

#. `Start Zope`_::

   $ ./bin/instance fg

#. Visit your new site.

Later you can set up the `Email Server`_ and an optional `Web Proxy`_.

You can `remove GroupServer`_ in three steps.

Requirements
============

GroupServer is developed on `Ubuntu`_, and is know to run on
`CentOS`_. We will gladly accept any modifications you have that will
make GroupServer run on more plaforms.

Below the packages in Ubuntu that are required to install GroupServer
are listed.

+----------------------+---------------------------------+
| System               | Ubuntu Package                  |
+======================+=================================+
| Python 2.6           | ``python2.6``                   |
|                      +---------------------------------+
|                      | ``python2.6-dev``               |
|                      +---------------------------------+
|                      | ``python-virtualenv``           |
+----------------------+---------------------------------+
| GNU C++ Compiler     | ``g++``                         |
+----------------------+---------------------------------+
| PostgreSQL Database  | ``postgresql``                  |
|                      +---------------------------------+
|                      | ``postgresql-server-dev-8.4``   |
|                      +---------------------------------+
|                      | ``libpq-dev``                   |
+----------------------+---------------------------------+
| Postfix Email Server | ``postfix``                     |
|                      +---------------------------------+
|                      | ``postfix-dev``                 |
+----------------------+---------------------------------+
| Compression          | ``libzzip-dev`` (from universe) |
|                      +---------------------------------+
|                      | ``lib64z1-dev`` (from main)     |    
+----------------------+---------------------------------+

Configure PostgreSQL
====================

Database administrators who know what they are doing should ignore this
section. For humble administrators that just want to try GroupServer,
life is easier if the excellent security in PostgreSQL is disabled, by
making the authentication methods ``trust`` in all cases. To do this, 
change the bottom few lines in the 
``/etc/postgresql/8.4/main/pg_hba.conf`` file (you will have to be root
to modify it)::

  # Database administrative login by UNIX sockets
  local   all         postgres                          trust
  # TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
  # "local" is for Unix domain socket connections only
  local   all         all                               trust
  # IPv4 local connections:
  host    all         all         127.0.0.1/32          trust
  # IPv6 local connections:
  host    all         all         ::1/128               trust

PosgreSQL will have to be restarted after the ``pg_hba.conf`` file has
been modified::
  
  $ sudo service postgresql-8.4 restart

For those who value privacy, security and trust, and want to 
understand more of PostgreSQL we recommend 
`PostgreSQL User Administration by David Pashley`_.

Set up Zope
===========

Installing Zope is done in four steps: first `pick a host name`_,
then `configure Zope`_, `run buildout`_ to install Zope, and finally
`start Zope`_.

Pick a Host Name
----------------

Your new site needs its own hostname. The name needs to be know to to
the *web browser* that you will use to access the site. It will pass
the name to Zope so it knows which GroupServer site to serve. (Zope can
serve multiple sites, as well as its web-based management system.) For
a trial system, the name can be set up in the ``hosts(5)`` file.

* Edit ``/etc/hosts`` as ``root``.
* Add the new host name to the ``localhost`` entry, which is normally
  the first one. For example, to add the name ``gstest`` change the
  line to the following::

    127.0.0.1    localhost gstest

* Save the ``hosts`` file.

Configure Zope
--------------

The configuration of Zope is carried out by modifying ``instance.cfg``,
which is located in the root of the GroupServer folder. The ``cfg``
file is interpreted by the Python `ConfigParser`_ module, which accepts
a syntax very similar to Windows INI files.

Postfix
~~~~~~~

All the user-configurable options are in the ``config`` section of 
``instance.cfg``. The first set of options deals with configuring 
Postfix.

``pgsql_host``
  The host that runs the PostgreSQL database. It defaults to the local
  machine, ``localhost``.
  
``pgsql_port``
  The IP port that PosgtreSQL listens  to. It is set to the default
  port for Ubuntu; it may be 5433 if multiple versions of PostgreSQL 
  are installed.

``pgsql_dbname``
  During installation a database will be created in PostgreSQL. The
  ``pgsql_dbname`` option defines the name of the database.

``pgsql_admin``
  The name of the admin of PostgreSQL, used to create the PostgreSQL
  user. The default is the name of the administrator under Ubuntu.
  
``pgsql_user``
  The name of the database user that will connect to the GroupServer
  database and modify the data. The database user is separate from the
  other users on the system, including those that log into the computer
  and those in Zope. The value of this option can be set to anything,
  but the default is usually good enough.

``pgsql_password``
  The password required to attach to the PostgreSQL database as the
  ``pgsql_user``. The default is blank, which means that no password
  is required.

Zope
~~~~

The ``zope`` options configure how you will access the Zope Management 
Interface (ZMI).

``zope_host``
  The host that will run Zope. It defaults to the local machine.
  
``zope_port``
  The IP port that Zope should listen to. It defaults to 8080. Zope
  will have to run as ``root`` to use port 80, and this is discouraged.
  
``zope_admin``
  The name of the user who will administer Zope.
  
``zope_pass``
  The password for the Zope administrator. It can (and should) be
  changed after GroupServer has been set up. (However, if you change the
  password after installation you will also have to change the scripts
  that Postfix uses to communicate with GroupServer, as they store the
  password too, see `Set up Scripts`_; we realise that the passwords
  should not be stored in the scripts.)

SMTP
~~~~

GroupServer sends email using SMTP. The four ``smtp`` options contain
the information required to comminicate with the SMTP server.

``smtp_host``
  The SMTP host that will be used to send notifications from
  GroupServer. It defaults to ``localhost``, assuming you will be
  running a local SMTP server.

``smtp_port``
  The port that the SMTP host will be listening to. Defaults to the
  standard SMTP port, ``25``.

``smtp_user``
  The user-name that the SMTP host requires to send email messages. It
  defaults to no user name.

``smtp_password``
  The password the SMTP host requires to send email messages. It defaults
  to no password.


GroupServer
~~~~~~~~~~~

The final set of options the setup of the initial GroupServer instance.

``host``
  The domain name used by your new GroupServer instance. It must be the
  same as what you picked a host name earlier (see `Pick a Host Name`_).

``port``
  The port that your new GroupServer instance will run on. By default
  it is ``8080``, which is the same as the ``zope_port``. To run on
  any other port you will need to set up a `web proxy`_.

``admin_email``
  When GroupServer is installed, an example site and group are
  created. So you can use the administration functions you must
  log in as an administrator. This is the email address of that
  administrator. Posts to the example group will be sent to the
  administrator at this address. In addition, this email address will
  be used to log into the new site.
  
``admin_password``
  The password of the administrator of the new GroupServer site. The
  password will be used to log in, and can be changed after the site
  has been created.
  
``user_email``
  The email address of the normal user that is created along with the
  new GroupServer site. The normal user is a member of the same group
  as the administrator, but the user has no permission to alter the
  site. Posts to the example group will be sent to the user at this
  address. In addition, this email address will be used to log in
  to the new site.  The email address for the normal user **must**
  be different to the email address for the administrator.

``user_password``
  The password for the normal user of the new GroupServer site. The
  password will be used to log in, and can be changed after the site
  has been created.
  
``support_email``
  The email address where support messages are sent, and were email
  notifications are send from. For testing this can be set to your own
  email address.
  
``timezone``
  The timezone that will be used to represent dates and times. It
  defaults to Coordinated Universal Time (``UTC``) but can be set other
  zones including
  
  - ``Pacific/Auckland``
  - ``Europe/London``
  - ``America/New_York``
  - ``America/Los_Angeles``
  - `…and others <http://en.wikipedia.org/wiki/List_of_tz_database_time_zones>`_.

Run Buildout
------------

`Buildout`_ is the python-based system that we use to download and
installs Zope, GroupServer, and all the libraries that they both
require. To run buildout, first create a virtual Python installation
in the directory that contains the GroupServer installation::

  $ virtualenv --no-site-packages -ppython2.6 .

This creates a sandbox for buildout with its own version of Python 2.6,
placed in ``./bin/``. When buildout runs it will install all the packages
in the sandbox. The version of Python that is maintained by your Linux
distribution will be untouched.

Next, update the `setuptools`_ package. To do this, use the local
version of ``easy_install``::

  $ ./bin/easy_install -U setuptools

The buildout system has to be initialised next::

  $ ./bin/python bootstrap.py

Finally, run ``buildout``::

  $ ./bin/buildout -v

Buildout takes a while, as it will download and install all the
requirements for GroupServer (around 30MB of packages) including:
  
* `Zope 2.13`_ (1.5MB)
* `ReportLab`_ (2MB)
* `lxml`_ (1.2MB)
* `SQL Alchemy`_ (1MB)
* `PIL`_ (0.5MB)
* `psycopg2`_ (0.25MB)

It is a good idea to make a cup of coffee, or go to lunch, while
buildout processes.

Start Zope
----------

To start the Zope *instance* run the following command::

  $ ./bin/instance fg

Zope will have started when the message ``Zope Ready to handle requests`` 
is displayed in the terminal. The above command runs Zope in foreground
mode; to run Zope as a daemon replace ``fg`` with ``start``.

You should be able to view your GroupServer site at
`http://{host}:{zope_port}`. If you did not change the defaults, the
address will be <http://gstest:8080>.
  
* The host is the one you picked earlier (see `Pick a Host Name`_).
* The port is the one that Zope listens to (see `Configure Zope`_).
    
Email Server
============

Postfix provides the email interface for GroupServer. Configuring
Postfix is tricky, and is optional: you can use the Web interface to
GroupServer without configuring the email server.  However, GroupServer
uses Postfix to:

* Queue email that is delivered to groups,
* Pass the email messages to GroupServer, and
* Send email messages from GroupServer to the email accounts of the
  group members.
  
Change the Configuration
------------------------

Postfix has to know to run two scripts when email messages come in for
your GroupServer site. To do this too, you will have to change some files
in the Postfix configuration directory. For Ubuntu this directory is
``/etc/postfix``.

Copy the Configuration Files
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Copy the files ``postfix_config/groupserver.*`` from the GroupServer
  installation directory to the Postfix configuration directory
  ``/etc/postfix``.
* Change the ownership of the files to the Postfix user and group. For
  Ubuntu this would be::
  
    # chown nobody.nogroup /etc/postfix/groupserver.*

  If you are not on Ubuntu, running the following will display the
  user-name of the Postfix user::
  
    $ /usr/sbin/postconf | grep default_privs | cut -f3 -d" "

Change ``main.cf``
~~~~~~~~~~~~~~~~~~

* Edit ``/etc/postfix/main.cf``.
* Find the ``alias_maps`` parameter.
* Add the following on a line below the existing value of
  ``alias_maps``::

    hash:/etc/postfix/groupserver.aliases

* Find the ``virtual_alias_maps`` parameter.
* Add the following on a line below the existing value of 
  ``virtual_alias_maps`` ::

    hash:/etc/postfix/groupserver.virtual     

Update Postfix
~~~~~~~~~~~~~~

To load the new configuration into Postfix run the following commands::

    # postalias /etc/postifx/groupserver.aliases
    # postmap /etc/postifx/groupserver.virtual
    # postfix reload

Set up Scripts
--------------

The two scripts that are run by Postfix are stored in the ``utils``
directory of your GroupServer installation. To allow them to be run by
Postfix the ownership will need to be changed to the same user and group
as the configuration fixes (see `Copy the Configuration Files`_). For
Ubuntu the command will be::

  # chown nobody.nogroup utils/*py
  
Web Proxy
=========

A web proxy is not required to try GroupServer. However, for production
sites it is a good idea to run a proxy to provide the following services:

* To mediate between the low level HTTP port (port 80) and the 
  high-port that Zope runs on (normally port 8080, see `Set up Zope`_).
* To rewrite the URL to include a skin directive.
* To rewrite the URL to support virtual hosting.
* To provide caching.

GroupServer is known to work with many Web proxies including Varnish,
``NGINX``, ``ha_proxy``, and Apache. For Apache a rewrite rule that is
required to provide the mapping looks like the one in the example file
``apache-groupserver``.

Remove Groupserver
==================

To remove GroupServer, you must remove the database, the associated
database user, and the directory that contains the GroupServer install.

1. To remove the database, run the following commands::
  
    $ dropdb gstestdb -U postgres
    $ dropuser gstest -U postgres

  ``gstestdb``
    The name of the test database that you set earlier (see `Configure 
    Zope`_)
    
  ``postgres``
    The name of the admin of PostgreSQL.
    
  ``gstest``
    The name of the PostgreSQL user.

2. Remove the directory that contains the GroupServer install::

    $ rm -r groupserver-1.0beta

History
=======

======= ==========  ====================================================
Version Date        Change
======= ==========  ====================================================
10.09   2010-09-01  Changed how the configuration options are set.
1.0β²   2010-07-15  Improved the buildout instructions.
1.0β²   2010-07-07  Changed the Zope 2.10 (Python 2.4) instructions to
                    Zope 2.13 (Python 2.6) instructions.
1.0β    2010-06-04  Removed a duplicated instruction from the 
                    `Quick Start`_, and bumped the version number.
1.0α    2010-05-31  Typo and minor improvement fixes.
1.0α    2010-05-01  Fixes because upstream broke our buildout.
1.0α    2010-04-29  Better automatic configuration, so the Configure
                    GroupServer section has been removed.
1.0α    2010-04-28  Improved the documentation for ``gs_port`` and 
                    added documentation for the ``gs_admin`` and
                    ``gs_user`` configuration options.
1.0α    2010-04-23  Added a link to the downloads page. Clarified the
                    security changes that are made to PostgreSQL. 
1.0α    2010-04-06  Fixed some quoting in the requirements.
1.0α    2010-03-31  Fixed the `Requirements`_, added 
                    `Remove GroupServer`_ and `History`_
1.0α    2010-03-25  Fixed the config options, added `Quick Start`_
1.0α    2009-10-04  Updated to reflect the new egg-based system
======= ==========  ====================================================

.. Resources

.. _GroupServer.org: http://groupserver.org
.. _Creative Commons Attribution-Share Alike 3.0 New Zealand License:
   http://creativecommons.org/licenses/by-sa/3.0/nz/
.. _OnlineGroups.Net: http://onlinegroups.net
.. _Ubuntu: http://ubuntu.com/
.. _CentOS: http://centos.org/
.. _PostgreSQL User Administration by David Pashley:
   http://www.davidpashley.com/articles/postgresql-user-administration.html
.. _ConfigParser:
   http://docs.python.org/library/configparser.html
.. _Buildout: http://www.buildout.org/
.. _setuptools: http://pypi.python.org/pypi/setuptools
.. _zc.buildout: http://pypi.python.org/pypi/zc.buildout/
.. _Zope 2.13: http://docs.zope.org/zope2/releases/2.13/
.. _ReportLab: http://www.reportlab.com/
.. _lxml: http://codespeak.net/lxml/
.. _SQL Alchemy: http://www.sqlalchemy.org/
.. _PIL: http://www.pythonware.com/products/pil/
.. _psycopg2: http://initd.org/psycopg/

