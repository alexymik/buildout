# Configuration parameters for the buildout of GroupServer.

[buildout]
extends =
    http://download.zope.org/Zope2/index/2.13.8/versions.cfg
    versions.cfg
    dependencies.cfg
    instance.cfg
    develop.cfg
    custom.cfg
        
index = http://d.pypi.python.org/simple
find-links =
        http://eggs.iopen.net/groupserver/base/
        http://eggs.iopen.net/groupserver/custom/
        http://eggs.iopen.net/groupserver/cache/
        http://dist.plone.org/thirdparty
        http://distfiles.minitage.org/public/externals/minitage/
        
allow-hosts =
        *buildout.org
        code.google.com
        codespeak.net
        distfiles.minitage.org
        effbot.org
        formencode.org
        github.com
        *.googlecode.com
        lxml.de
        initd.org
        *.iopen.net
        *.plone.org
        *.plone.org:5021
        *.python-hosting.com
        pybrary.net
        *python.org
        *pythonware.com
        *zope.org
        
versions = versions

zope-eggs = 
       Products.CustomUserFolder
       Products.GroupServer
       Products.GSContent
       Products.GSContentManager
       Products.GSGroup
       Products.GSGroupMember
       Products.GSParticipationStats
       Products.GSProfile
       Products.GSRedirect
       Products.GSSearch
       Products.GSFeedParser
       Products.WYMEditor
       Products.XWFChat
       Products.XWFContentFramework
       Products.XWFCore
       Products.XWFFileLibrary2
       Products.XWFMailingListManager
       gs.content.css
       gs.content.form
       gs.content.js.jquery
       gs.content.js.sharebox
       gs.errormesg
       gs.group.base
       gs.group.home
       gs.group.member.add
       gs.group.member.base
       gs.group.member.canpost
       gs.group.member.directory
       gs.group.member.email
       gs.group.member.invite
       gs.group.member.join
       gs.group.member.leave
       gs.group.member.list
       gs.group.member.log
       gs.group.member.manage
       gs.group.member.request
       gs.group.messages.base
       gs.group.messages.image
       gs.group.messages.moderate
       gs.group.messages.post
       gs.group.messages.topic
       gs.group.privacy
       gs.group.properties
       gs.group.start
       gs.groups
       gs.help
       gs.image
       gs.login
       gs.option
       gs.profile.base
       gs.profile.email.base
       gs.profile.email.settings
       gs.profile.email.verify
       gs.profile.invite
       gs.profile.notify
       gs.profile.password
       gs.profile.signup.base
       gs.profile.signup.facebook
       gs.sitemember
       gs.site.changeintro
       gs.site.change.base
       gs.site.change.greeting
       gs.site.change.intro
       gs.site.change.name
       gs.site.change.tz
       gs.skin.blue
       gs.skin.green
       ${buildout:custom-zope-eggs}

eggs = ${buildout:custom-eggs}
       ${buildout:zope-eggs}
       gs.auth.oauth.client
       gs.viewlet
       Products.ZSQLMethods
       Products.CookieCrumbler
       Products.CMFCore
       Products.CustomProperties
       Products.DataTemplates
       Products.FileSystemSite
       Products.GSAuditTrail
       Products.GSSiteMenu
       Products.NuxUserGroups
       Products.XWFDropBox
       Products.XWFIdFactory
       Products.XWFMetadata
       Products.XWFNewsContent
       Products.XWFPluggableFiles
       Products.XWFSurveyManager
       Products.ZPsycopgDA
       Products.ZSQLAlchemy

       zif.jsonserver
       SQLAlchemy
       python-cjson
       FeedParser
       FormEncode
       StructuredText
       psycopg2
       PIL
       pytz
       simplejson
       trml2pdf
       reportlab
       elementtree
       lxml
       z3c.form
       z3c.rml 

       gs.recipe.setupgs

       five.formlib
       zope.app.apidoc
       zope.app.file
       zope.app.folder
       zope.app.rotterdam
       zope.datetime
       zope.mkzeoinstance
       
parts = 
        mkdirs
        pyxml
        libxml2
        zlib
        egenix-mx-base
        fabric
        libjpeg
        libxslt
        lxml
        pil
        instancepython
        instance
        init-pgsql
        setup-gs
        repozo
        testrunner
        finish

#        installmessage

develop =

eggs-directory = eggs
unzip = true
download-cache = downloads

extensions =
    buildout.bootstrap
    isotoma.buildout.logger
    mr.developer
    buildout.dumppickedversions

dump-picked-versions-file = picked-versions.cfg

[mkdirs]
recipe = z3c.recipe.mkdir
paths = parts/site-packages
        downloads
        src

[finish]
recipe = collective.recipe.cmd:py
on_install = true
on_update = true
cmds =
     >>> import sys, os
     >>> pyver = ".".join(map(str, sys.version_info[:2]))
     >>> libxml2 = "${buildout:directory}/parts/libxml2/lib/python%s/site-packages/" % pyver
     >>> libxslt = "${buildout:directory}/parts/libxslt/lib/python%s/site-packages/" % pyver
     >>> def symlink(path):
     ...    if os.path.exists(path):
     ...        for pname in os.listdir(path):
     ...            lpath = os.path.join("parts/site-packages/", pname)
     ...            if not os.path.exists(lpath):
     ...                os.symlink(os.path.join(path, pname), lpath)
     >>> symlink(libxml2)
     >>> symlink(libxslt)
     
[installmessage]
recipe = collective.recipe.cmd:py
on_install = true
on_update = false
cmds =
     >>> print "=================================================================="
     >>> print "If the install went well, and your outgoing email server was"
     >>> print "configured correctly, you should shortly receive a welcome email"
     >>> print "for your example group."
     >>> print
     >>> print "You can now start GroupServer with:"
     >>> print "   $ ${buildout:directory}/bin/instance start"
     >>> print
     >>> print "Should something go wrong, there is a log file located at:"
     >>> print "   ${buildout:directory}/var/log/instance.log"
     >>> print
     >>> print "You may now access the ZMI from a web browser as:"
     >>> print "   http://${config:zope_host}:${config:zope_port}/manage"
     >>> print
     >>> print "with the login credentials:"
     >>> print "   user: ${config:zope_admin}"
     >>> print "   pass: ${config:zope_pass}"
     >>> print
     >>> print "If this succeeds, and you have configured DNS or your local hosts"
     >>> print "file correctly, you should be able to access:"
     >>> print "   http://${config:host}:${config:port}"
     >>> print
     >>> print "then login as either an administrator:"
     >>> print "   user: ${config:admin_email}"
     >>> print "   pass: ${config:admin_password}"
     >>> print
     >>> print "or as a regular user:"
     >>> print "   user: ${config:user_email}"
     >>> print "   pass: ${config:user_password}"
     >>> print
     >>> print "To stop GroupServer, perform:"
     >>> print "   $ ${buildout:directory}/bin/instance stop"
     >>> print "=================================================================="

[instancepython]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = instancepython
extra-paths = ${buildout:directory}/parts/site-packages/

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
packages = ${instance:products} ./Products/

[testrunner]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
script = test

[fabric]
recipe = zc.recipe.egg
eggs = fabric
scripts = fab
